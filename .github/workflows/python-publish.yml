# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Publish python poetry package
      # You may pin to the exact commit or the version.
      # uses: JRubics/poetry-publish@b71e946be561eaf8bfb7562ecc97c26fb8583070
      uses: JRubics/poetry-publish@v1.17
      with:
        # The version of python to install
        # python_version: # optional, default is latest
        # The version of poetry to install
        # poetry_version: # optional, default is latest
        # API token to authenticate when uploading package to PyPI (https://pypi.org/manage/account/) or TestPyPI (https://test.pypi.org/manage/account/)
        pypi_token: ${{ secrets.PYPI }} # optional
        # Name of a repository where the package will be uploaded
        repository_name: twofabackup # optional
        # URL where the package will be uploaded
        # repository_url: # optional
        # Username to log in into a repository where the package will be uploaded if using http-basic authentification instead of api token
        # repository_username: # optional
        # Password to log in into a repository where the package will be uploaded if using http-basic authentification instead of api token
        # repository_password: # optional
        # The build format to be used, either "sdist" or "wheel"
        # build_format: # optional
        # Install project without developer requirements.
        # ignore_dev_requirements: # optional
        # Allow usage of poetry pre-release and development versions
        # allow_poetry_pre_release: # optional
        # An optional space-separated list of debian packages to be installed before building the package
        # extra_build_dependency_packages: # optional
        # An optional space-separated list of poetry plugins to be installed before building the package
        # plugins: # optional
        # An optional subdirectory path if poetry package doesn't reside in the main workflow directory
        # package_directory: # optional, default is .
